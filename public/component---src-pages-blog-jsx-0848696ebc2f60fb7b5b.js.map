{"version":3,"sources":["webpack:///./src/components/Paragraph.jsx","webpack:///./src/pages/blog.jsx"],"names":["Paragraph","children","props","variant","as","YearContainer","sx","display","YearTitle","fontSize","fontWeight","lineHeight","PostTitle","BlogPage","title","useSiteMetadata","posts","allMdx","edges","year","Title","map","index","YearComponent","node","fields","frontmatter","thisYear","key","slug","flexDirection","alignItems","length","mb","width","GatsbyLink","to","unwidow","mt","description"],"mappings":"oYAceA,IAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,E,oIAAhB,wBAChB,YAAC,IAAD,GAAMC,QAAQ,YAAYC,GAAG,KAAQF,GAClCD,K,04GCKL,IAAMI,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,SAAaC,EAApB,8BACpB,YAAC,IAAD,GAAKI,GAAE,GAAIC,QAAS,CAAC,OAAQ,UAAaD,IAAUJ,GACjDD,IASCO,EAAY,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAaC,EAAhB,yBAChB,YAAC,IAAD,GAASO,SAAU,CAAC,EAAG,GAAIC,WAAW,SAASC,WAAW,SAAYT,GACnED,IAQCW,EAAY,SAAC,GAAD,IAAGN,EAAH,EAAGA,GAAIL,EAAP,EAAOA,SAAaC,EAApB,8BAChB,YAAC,IAAD,GACEE,GAAG,KACHE,GAAE,GACAC,QAAS,eACTE,SAAU,CAAC,EAAG,GACdE,WAAY,SACTL,IAEDJ,GAEHD,IAsFUY,UA7EE,WAAO,IACdC,EAAUC,cAAVD,MAoBFE,EAnBI,OAmBSC,OAAOC,MACtBC,EAAO,IAEX,OACE,oCACE,YAAC,IAAD,KACE,mCAAeL,IAGjB,2BACE,YAAC,IAAD,KACE,YAAC,IAAOM,MAAR,uCAGF,wBACGJ,EAAMK,KAAI,WAAWC,GAAW,IAG3BC,EAHQC,EAAkB,EAAlBA,KACJC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YACVC,EAAWD,EAAYP,KAQ7B,OALIQ,IAAaR,IACfI,EAAgB,YAACf,EAAD,KAAYkB,EAAYP,MACxCA,EAAOQ,GAIP,YAAC,IAAD,GACEC,IAAKH,EAAOI,KACZC,cAAc,MACdC,WAAW,cACNT,EAAQ,IAAMN,EAAMgB,OAAS,GAAK,CAAEC,GAAI,CAAC,EAAG,KAEjD,YAAC5B,EAAD,CAAe6B,MAAO,IAAQX,GAE9B,YAAC,IAAD,CAAKW,MAAO,CAAC,EAAG,KACd,YAACtB,EAAD,KACE,YAAC,IAAD,CAAMT,QAAQ,UAAUC,GAAI+B,OAAYC,GAAIX,EAAOI,MAChDQ,YAAQX,EAAYZ,SAIzB,YAAC,IAAD,CAAWwB,GAAI,EAAGL,GAAI,GACnBI,YAAQX,EAAYa,cAGvB,YAAC,IAAD,CAAWH,GAAIX,EAAOI,MAAtB","file":"component---src-pages-blog-jsx-0848696ebc2f60fb7b5b.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Text } from 'rebass'\r\n\r\nconst Paragraph = ({ children, ...props }) => (\r\n  <Text variant=\"paragraph\" as=\"p\" {...props}>\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nParagraph.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Paragraph\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link as GatsbyLink, useStaticQuery, graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport { Box, Flex, Heading, Link } from 'rebass'\r\nimport Paragraph from '../components/Paragraph'\r\nimport Header from '../components/Header'\r\nimport ArrowLink from '../components/ArrowLink'\r\nimport { useSiteMetadata } from '../utils/hooks'\r\nimport unwidow from '../utils/unwidow'\r\n\r\nconst YearContainer = ({ sx, children, ...props }) => (\r\n  <Box sx={{ display: ['none', 'block'], ...sx }} {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nYearContainer.propTypes = {\r\n  sx: PropTypes.object,\r\n  children: PropTypes.node,\r\n}\r\n\r\nconst YearTitle = ({ children, ...props }) => (\r\n  <Heading fontSize={[2, 3]} fontWeight=\"medium\" lineHeight=\"title\" {...props}>\r\n    {children}\r\n  </Heading>\r\n)\r\n\r\nYearTitle.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n}\r\n\r\nconst PostTitle = ({ sx, children, ...props }) => (\r\n  <Heading\r\n    as=\"h3\"\r\n    sx={{\r\n      display: 'inline-block',\r\n      fontSize: [2, 3],\r\n      lineHeight: 'title',\r\n      ...sx,\r\n    }}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </Heading>\r\n)\r\n\r\nPostTitle.propTypes = {\r\n  sx: PropTypes.object,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nconst BlogPage = () => {\r\n  const { title } = useSiteMetadata()\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              title\r\n              description\r\n              year: date(formatString: \"YYYY\")\r\n            }\r\n            fields {\r\n              slug\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const posts = data.allMdx.edges\r\n  let year = '0'\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Blog â€¢ {title}</title>\r\n      </Helmet>\r\n\r\n      <article>\r\n        <Header>\r\n          <Header.Title>Eloquent Writings About&nbsp;Stuff</Header.Title>\r\n        </Header>\r\n\r\n        <main>\r\n          {posts.map(({ node }, index) => {\r\n            const { fields, frontmatter } = node\r\n            const thisYear = frontmatter.year\r\n            let YearComponent\r\n\r\n            if (thisYear !== year) {\r\n              YearComponent = <YearTitle>{frontmatter.year}</YearTitle>\r\n              year = thisYear\r\n            }\r\n\r\n            return (\r\n              <Flex\r\n                key={fields.slug}\r\n                flexDirection=\"row\"\r\n                alignItems=\"flex-start\"\r\n                {...(index + 1 === posts.length ? {} : { mb: [4, 5] })}\r\n              >\r\n                <YearContainer width={1 / 5}>{YearComponent}</YearContainer>\r\n\r\n                <Box width={[1, 4 / 5]}>\r\n                  <PostTitle>\r\n                    <Link variant=\"ui-link\" as={GatsbyLink} to={fields.slug}>\r\n                      {unwidow(frontmatter.title)}\r\n                    </Link>\r\n                  </PostTitle>\r\n\r\n                  <Paragraph mt={3} mb={2}>\r\n                    {unwidow(frontmatter.description)}\r\n                  </Paragraph>\r\n\r\n                  <ArrowLink to={fields.slug}>Read More</ArrowLink>\r\n                </Box>\r\n              </Flex>\r\n            )\r\n          })}\r\n        </main>\r\n      </article>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogPage\r\n"],"sourceRoot":""}