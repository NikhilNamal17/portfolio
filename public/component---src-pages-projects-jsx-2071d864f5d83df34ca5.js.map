{"version":3,"sources":["webpack:///./src/components/ProjectPreview.jsx","webpack:///./src/components/Paragraph.jsx","webpack:///./src/pages/projects.jsx"],"names":["ProjectTitle","sx","children","props","display","InlineBox","PropTypes","shape","title","string","isRequired","description","repo","website","ProjectPreview","project","level","variant","href","as","my","fontSize","fontWeight","lineHeight","unwidow","mt","mb","mr","Paragraph","ProjectsPage","useSiteMetadata","projects","allProjectsJson","edges","Title","map","index","node","key","length"],"mappings":"+wCAOA,IAAMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAaC,EAApB,8BACnB,YAAC,IAAD,GAASF,GAAE,GAAIG,QAAS,gBAAmBH,IAAUE,GAClDD,IASCG,EAAY,SAAC,GAAD,IAAGJ,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAaC,EAApB,8BAChB,YAAC,IAAD,GAAKF,GAAE,GAAIG,QAAS,gBAAmBH,IAAUE,GAC9CD,IA4CmBI,IAAUC,MAAM,CACtCC,MAAOF,IAAUG,OAAOC,WACxBC,YAAaL,IAAUG,OACvBG,KAAMN,IAAUG,OAChBI,QAASP,IAAUG,SASNK,IAhDQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAUb,EAAtB,gCACrB,YAAC,IAAQA,EACP,YAAC,IAAD,CACEc,QAAQ,UACRC,KAAMH,EAAQF,QAAUE,EAAQF,QAAUE,EAAQH,MAElD,YAACZ,EAAD,CACEmB,GAAIH,EACJI,GAAI,EACJC,SAAU,CAAC,EAAG,GACdC,WAAW,OACXC,WAAW,SAEVC,YAAQT,EAAQP,SAIrB,YAAC,IAAD,CAAWiB,GAAI,EAAGC,GAAI,GACnBF,YAAQT,EAAQJ,cAGlBI,EAAQF,SACP,YAACR,EAAeU,EAAQF,SAAWE,EAAQH,KAAO,CAAEe,GAAI,GAAM,GAC5D,YAAC,IAAD,CAAWT,KAAMH,EAAQF,SAAzB,YAIHE,EAAQH,MACP,YAACP,EAAD,KACE,YAAC,IAAD,CAAWa,KAAMH,EAAQH,MAAzB,kB,2UC5COgB,IAVG,SAAC,GAAD,IAAG1B,EAAH,EAAGA,SAAaC,E,oIAAhB,wBAChB,YAAC,IAAD,GAAMc,QAAQ,YAAYE,GAAG,KAAQhB,GAClCD,K,mWCgDU2B,UA/CM,WAAO,IAClBrB,EAAUsB,cAAVtB,MAgBFuB,EAfI,OAeYC,gBAAgBC,MAEtC,OACE,oCACE,YAAC,IAAD,KACE,uCAAmBzB,IAGrB,2BACE,YAAC,IAAD,KACE,YAAC,IAAO0B,MAAR,qCAGF,wBACGH,EAASI,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACf,OACE,YAAC,IAAD,GACEtB,QAASsB,EACTrB,MAAM,KACNsB,IAAKD,EAAK7B,OACL4B,EAAQ,IAAML,EAASQ,OAAS,GAAK,CAAEb,GAAI,CAAC,EAAG,c","file":"component---src-pages-projects-jsx-2071d864f5d83df34ca5.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, Heading, Link } from 'rebass'\r\nimport unwidow from '../utils/unwidow'\r\nimport Paragraph from './Paragraph'\r\nimport ArrowLink from './ArrowLink'\r\n\r\nconst ProjectTitle = ({ sx, children, ...props }) => (\r\n  <Heading sx={{ display: 'inline-block', ...sx }} {...props}>\r\n    {children}\r\n  </Heading>\r\n)\r\n\r\nProjectTitle.propTypes = {\r\n  sx: PropTypes.object,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nconst InlineBox = ({ sx, children, ...props }) => (\r\n  <Box sx={{ display: 'inline-block', ...sx }} {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nInlineBox.propTypes = {\r\n  sx: PropTypes.object,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nconst ProjectPreview = ({ project, level, ...props }) => (\r\n  <Box {...props}>\r\n    <Link\r\n      variant=\"ui-link\"\r\n      href={project.website ? project.website : project.repo}\r\n    >\r\n      <ProjectTitle\r\n        as={level}\r\n        my={0}\r\n        fontSize={[2, 3]}\r\n        fontWeight=\"bold\"\r\n        lineHeight=\"title\"\r\n      >\r\n        {unwidow(project.title)}\r\n      </ProjectTitle>\r\n    </Link>\r\n\r\n    <Paragraph mt={3} mb={2}>\r\n      {unwidow(project.description)}\r\n    </Paragraph>\r\n\r\n    {project.website && (\r\n      <InlineBox {...(project.website && project.repo ? { mr: 4 } : {})}>\r\n        <ArrowLink href={project.website}>Website</ArrowLink>\r\n      </InlineBox>\r\n    )}\r\n\r\n    {project.repo && (\r\n      <InlineBox>\r\n        <ArrowLink href={project.repo}>Repository</ArrowLink>\r\n      </InlineBox>\r\n    )}\r\n  </Box>\r\n)\r\n\r\nconst projectPropType = PropTypes.shape({\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  repo: PropTypes.string,\r\n  website: PropTypes.string,\r\n})\r\n\r\nProjectPreview.propTypes = {\r\n  project: projectPropType.isRequired,\r\n  level: PropTypes.string.isRequired,\r\n}\r\n\r\nexport { projectPropType }\r\nexport default ProjectPreview\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Text } from 'rebass'\r\n\r\nconst Paragraph = ({ children, ...props }) => (\r\n  <Text variant=\"paragraph\" as=\"p\" {...props}>\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nParagraph.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Paragraph\r\n","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Header from '../components/Header'\r\nimport ProjectPreview from '../components/ProjectPreview'\r\nimport { useSiteMetadata } from '../utils/hooks'\r\n\r\nconst ProjectsPage = () => {\r\n  const { title } = useSiteMetadata()\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allProjectsJson {\r\n        edges {\r\n          node {\r\n            title\r\n            description\r\n            website\r\n            repo\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const projects = data.allProjectsJson.edges\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Projects â€¢ {title}</title>\r\n      </Helmet>\r\n\r\n      <article>\r\n        <Header>\r\n          <Header.Title>First-World Problem&nbsp;Solvers</Header.Title>\r\n        </Header>\r\n\r\n        <main>\r\n          {projects.map(({ node }, index) => {\r\n            return (\r\n              <ProjectPreview\r\n                project={node}\r\n                level=\"h2\"\r\n                key={node.title}\r\n                {...(index + 1 === projects.length ? {} : { mb: [4, 5] })}\r\n              />\r\n            )\r\n          })}\r\n        </main>\r\n      </article>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProjectsPage\r\n"],"sourceRoot":""}